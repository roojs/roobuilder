{
 "build_module" : "builder",
 "items" : [
  {
   "$ modal" : true,
   "$ xns" : "Gtk",
   "default_height" : 200,
   "default_width" : 400,
   "items" : [
    {
     "$ pack" : "get_content_area().add ",
     "$ xns" : "Gtk",
     "Gtk.Orientation orientation" : "Gtk.Orientation.VERTICAL",
     "items" : [
      {
       "$ xns" : "Gtk",
       "* pack" : "pack_start,false,false,0",
       "Gtk.Orientation orientation" : "Gtk.Orientation.HORIZONTAL",
       "gint margin" : 3,
       "items" : [
        {
         "$ xns" : "Gtk",
         "* pack" : "pack_start,false,false",
         "label" : "Select Template : ",
         "xtype" : "Label"
        },
        {
         "$ xns" : "Gtk",
         "* init" : "this.el.add_attribute(_this.cellrenderer.el , \"markup\", 1 );",
         "* pack" : "add",
         "id" : "combo",
         "items" : [
          {
           "$ xns" : "Gtk",
           "* pack" : "pack_start,true",
           "id" : "cellrenderer",
           "xtype" : "CellRendererText"
          },
          {
           "$ columns" : "typeof(string),typeof(string)",
           "$ xns" : "Gtk",
           "* pack" : "set_model",
           "id" : "model",
           "n_columns" : 2,
           "xtype" : "ListStore",
           "| void loadData" : [
            "  (GLib.List<string> data) {",
            "    this.el.clear();                                    ",
            "    Gtk.TreeIter iter;",
            "    var el = this.el;",
            "    ",
            "   /// el.append(out iter);",
            "    ",
            "     ",
            "   // el.set_value(iter, 0, \"\");",
            "   // el.set_value(iter, 1, \"aaa  - Just add Element - aaa\");",
            "    ",
            "    for (var i = 0; i < data.length();i++) {",
            "    ",
            "",
            "        el.append(out iter);",
            "        var str = data.nth_data(i);",
            "        var fn = Path.get_basename (str);",
            "        fn.replace(\".json\", \"\");",
            "        ",
            "        el.set_value(iter, 0, str);",
            "        el.set_value(iter, 1, fn);",
            "        ",
            "    }",
            "    this.el.set_sort_column_id(1, Gtk.SortType.ASCENDING);          ",
            "                                     ",
            "}",
            ""
           ]
          }
         ],
         "xtype" : "ComboBox"
        }
       ],
       "xtype" : "Box"
      },
      {
       "$ xns" : "Gtk",
       "* pack" : "pack_start,false,false,0",
       "Gtk.Orientation orientation" : "Gtk.Orientation.HORIZONTAL",
       "gint margin" : 3,
       "items" : [
        {
         "$ xns" : "Gtk",
         "* pack" : "pack_start,false,false",
         "label" : "Select Database Table : ",
         "xtype" : "Label"
        },
        {
         "$ xns" : "Gtk",
         "* init" : "this.el.add_attribute(_this.dbcellrenderer.el , \"markup\", 1 );",
         "* pack" : "add",
         "id" : "dbcombo",
         "items" : [
          {
           "$ xns" : "Gtk",
           "* pack" : "pack_start,true",
           "id" : "dbcellrenderer",
           "xtype" : "CellRendererText"
          },
          {
           "$ columns" : "typeof(string),typeof(string)",
           "$ xns" : "Gtk",
           "* pack" : "set_model",
           "id" : "dbmodel",
           "n_columns" : 2,
           "xtype" : "ListStore",
           "| void loadData" : [
            "  (Gee.ArrayList<string> data) {",
            "    this.el.clear();                                    ",
            "    Gtk.TreeIter iter;",
            "    var el = this.el;",
            "    ",
            "   /// el.append(out iter);",
            "    ",
            "     ",
            "   // el.set_value(iter, 0, \"\");",
            "   // el.set_value(iter, 1, \"aaa  - Just add Element - aaa\");",
            "",
            "    el.append(out iter);",
            "",
            "    ",
            "    el.set_value(iter, 0, \"\");",
            "    el.set_value(iter, 1, \"-- select a table --\");",
            "    ",
            "    ",
            "    for (var i = 0; i < data.size;i++) {",
            "    ",
            "",
            "        el.append(out iter);",
            "        ",
            "        el.set_value(iter, 0, data.get(i));",
            "        el.set_value(iter, 1, data.get(i));",
            "        ",
            "    }",
            "     this.el.set_sort_column_id(0, Gtk.SortType.ASCENDING);          ",
            "                                     ",
            "}",
            ""
           ]
          }
         ],
         "xtype" : "ComboBox"
        }
       ],
       "xtype" : "Box"
      }
     ],
     "xtype" : "Box"
    },
    {
     "$ xns" : "Gtk",
     "* pack" : "add_action_widget,0",
     "label" : "Cancel",
     "xtype" : "Button"
    },
    {
     "$ xns" : "Gtk",
     "* pack" : "add_action_widget,1",
     "label" : "Just add it",
     "xtype" : "Button"
    },
    {
     "$ xns" : "Gtk",
     "* pack" : "add_action_widget,2",
     "label" : "OK",
     "xtype" : "Button"
    }
   ],
   "listeners" : {
    "delete_event" : [
     "  (self, event)  =>{",
     "    this.el.hide();",
     "    return true;",
     "}"
    ]
   },
   "title" : "Add an Object",
   "xtype" : "Dialog",
   "| JsRender.Node? show" : [
    " (Xcls_MainWindow mwindow, Palete.Palete pal, JsRender.Node node, Project.Project project) {",
    "    ",
    "    this.el.show_all();",
    "    var opts = pal.listTemplates(node);",
    "    if (opts.length() < 1) {",
    "        this.el.hide();",
    "        return node;",
    "    }",
    "    this.el.set_attached_to( mwindow.el);",
    "    this.el.set_transient_for( mwindow.el);",
    "    ",
    "    //opts.unshift({ path: '' , name :'Just add Element' });",
    "     _this.model.loadData(opts);",
    "     _this.combo.el.set_active(-1);",
    "     ",
    "     ",
    "     var db =  new Palete.RooDatabase.from_project(project);",
    "     _this.dbmodel.loadData(db.readTablesGee());",
    "     ",
    "     var plug = mwindow.windowstate.webkit_plugin;",
    "     ",
    "     _this.dbcombo.el.set_active(-1);",
    "     ",
    "     ",
    "   ",
    "    var res = this.el.run();",
    "    this.el.hide();    ",
    "    //var ix = _this.combo.el.get_active();",
    "    if (res < 1 ) {",
    "        return null; // 0 = cancel.",
    "    }",
    "    if (res < 2 ) {",
    "        return node; // 1 = just add it..",
    "    }",
    "    ",
    "    // have they selected a table??",
    "    ",
    "   Gtk.TreeIter iter; ",
    "    Value vfname;   ",
    "    if (_this.dbcombo.el.get_active_iter (out iter)) {    ",
    "         this.dbmodel.el.get_value (iter, 0, out vfname);",
    "         if (((string)vfname).length > 0 && plug.has_plugin(node.fqn())) {",
    "            var json_str = plug.show(mwindow.el, project, node.fqn(), (string)vfname);",
    "            print(\"json_str = %s\\n\", json_str);",
    "            if (json_str.length < 1) {",
    "",
    "                return node;",
    "            }",
    "            var pa = new Json.Parser();",
    "            try {",
    "",
    "\t        pa.load_from_data(json_str);",
    "\t    } catch(Error e) {",
    "\t        return node;",
    "\t    }",
    "\t    var new_node = pa.get_root();",
    "    ",
    "\t    if (new_node.get_node_type () != Json.NodeType.OBJECT) {",
    "\t\t    return node;",
    "\t    }",
    "\t    var obj = new_node.get_object ();",
    "",
    "\t    var ret = new JsRender.Node();",
    "",
    "\t    ret.loadFromJson(obj, 1);",
    "\t    return ret;",
    "         }",
    "        ",
    "    }",
    "",
    "    if (!_this.combo.el.get_active_iter (out iter)) {",
    "",
    "        return node; // nothing selected...",
    "    }",
    "   ",
    "    this.model.el.get_value (iter, 0, out vfname);",
    "    ",
    "    ",
    "    return pal.loadTemplate((string)vfname);",
    "",
    "}",
    ""
   ]
  }
 ],
 "modOrder" : "",
 "name" : "DialogTemplateSelect",
 "parent" : "",
 "path" : "/home/alan/gitlive/roobuilder/src/Builder4/DialogTemplateSelect.bjs",
 "permname" : "",
 "title" : ""
}