{
 "build_module" : "builder",
 "items" : [
  {
   "$ deletable" : true,
   "$ xns" : "Gtk",
   "@ void selected" : "(Project.Project? proj)",
   "bool modal" : true,
   "default_height" : 500,
   "default_width" : 600,
   "items" : [
    {
     "$ homogeneous" : false,
     "$ xns" : "Gtk",
     "* prop" : "child",
     "Gtk.Orientation orientation" : "Gtk.Orientation.VERTICAL",
     "bool expand" : true,
     "items" : [
      {
       "$ homogeneous" : false,
       "$ xns" : "Gtk",
       "Gtk.Orientation orientation" : "Gtk.Orientation.HORIZONTAL",
       "bool hexpand" : true,
       "bool vexpand" : false,
       "items" : [
        {
         "$ xns" : "Gtk",
         "int margin_end" : 4,
         "label" : "Project type :",
         "xtype" : "Label"
        },
        {
         "$ xns" : "Gtk",
         "* init" : [
          " this.el.add_attribute(_this.cellrender.el , \"markup\", 1 );  ",
          "  "
         ],
         "bool hexpand" : true,
         "id" : "xtype",
         "items" : [
          {
           "$ xns" : "Gtk",
           "* pack" : "pack_start,true",
           "id" : "cellrender",
           "xtype" : "CellRendererText"
          },
          {
           "$ columns" : "typeof(string),typeof(string)",
           "$ xns" : "Gtk",
           "* pack" : "set_model",
           "id" : "model",
           "n_columns" : 2,
           "xtype" : "ListStore",
           "| void loadData" : [
            "  ( ) {",
            "        this.el.clear();",
            "                      ",
            "        Gtk.TreeIter iter;",
            "                ",
            "        el.append(out iter);",
            "        el.set_value(iter, 0, \"Roo\");",
            "        el.set_value(iter, 1, \"Roo Project\");",
            "        ",
            "        el.append(out iter);",
            "        el.set_value(iter, 0, \"Gtk\");",
            "        el.set_value(iter, 1, \"Gtk Project\");",
            "         ",
            "        el.append(out iter);",
            "        el.set_value(iter, 0, \"Flutter\");",
            "        el.set_value(iter, 1, \"Flutter Project\");",
            "              ",
            "                                     ",
            "}",
            ""
           ]
          }
         ],
         "xtype" : "ComboBox",
         "| string getValue" : [
          " () {",
          "     var ix = this.el.get_active();",
          "        if (ix < 0 ) {",
          "            return \"\";",
          "        }",
          "        switch(ix) {",
          "            case 0:",
          "                return \"Roo\";",
          "            case 1:",
          "                return \"Gtk\";",
          "           case 2:",
          "                return \"Flutter\";",
          "        }",
          "        return \"\";",
          "}",
          ""
         ]
        }
       ],
       "xtype" : "Box"
      },
      {
       "$ homogeneous" : false,
       "$ xns" : "Gtk",
       "Gtk.Orientation orientation" : "Gtk.Orientation.HORIZONTAL",
       "bool hexpand" : true,
       "bool vexpand" : false,
       "int spacing" : 0,
       "items" : [
        {
         "$ xns" : "Gtk",
         "int margin_end" : 4,
         "items" : [
          {
           "$ string? path" : "null",
           "$ xns" : "Gtk",
           "bool hexpand" : true,
           "id" : "dir",
           "listeners" : {
            "clicked" : [
             "( ) => {",
             "\tvar fd = new Gtk.FileDialog();",
             "\tfd.title = \"Select Folder\";",
             "\tfd.modal = true;",
             "\t",
             "\tfd.select_folder.begin(_this.el, null, (obj, res) => {",
             "\t \tvar f = fd.select_folder.end(res);",
             "\t\tthis.path = f.get_path();",
             "\t\tthis.el.label = this.path;",
             "\t});",
             "}",
             ""
            ]
           },
           "string label" : "Select Folder",
           "xtype" : "Button"
          }
         ],
         "label" : "Folder:",
         "xtype" : "Label"
        },
        {
         "$ string? path" : "null",
         "$ xns" : "Gtk",
         "bool hexpand" : true,
         "id" : "dir",
         "listeners" : {
          "clicked" : [
           "( ) => {",
           "\tvar fd = new Gtk.FileDialog();",
           "\tfd.title = \"Select Folder\";",
           "\tfd.modal = true;",
           "\t",
           "\tfd.select_folder.begin(_this.el, null, (obj, res) => {",
           "\t \tvar f = fd.select_folder.end(res);",
           "\t\tthis.path = f.get_path();",
           "\t\tthis.el.label = this.path;",
           "\t});",
           "}",
           ""
          ]
         },
         "string label" : "Select Folder",
         "xtype" : "Button"
        }
       ],
       "xtype" : "Box"
      },
      {
       "$ xns" : "Gtk",
       "Gtk.Orientation orientation" : "Gtk.Orientation.HORIZONTAL",
       "bool hexpand" : true,
       "int spacing" : 0,
       "items" : [
        {
         "$ Gtk.Align halign" : "Gtk.Align.START",
         "$ xns" : "Gtk",
         "label" : "OK",
         "listeners" : {
          "clicked" : [
           "( ) => {",
           "  var err_dialog = Xcls_StandardErrorDialog.singleton();",
           "",
           "   ",
           " ",
           "         ",
           "      if (_this.xtype.getValue().length < 1) {",
           "           ",
           "            err_dialog.show(_this.el,\"You have to set Project type\");             ",
           "            return;",
           "        }",
           "        if (_this.dir.path == null) {",
           "",
           "            err_dialog.show(_this.el,\"You have to select a folder\");             ",
           "            return;",
           "        }",
           "      ",
           "    ",
           "    this.el.hide();",
           "    ",
           "    ",
           "",
           " ",
           "    var fn = _this.dir.path;",
           "    ",
           "    print(\"add %s\\n\" , fn);",
           "    try {",
           "\t\tvar project = Project.Project.factory(_this.xtype.getValue(), fn);",
           "\t\tproject.save();",
           "\t\tProject.projects.set(project.name,project);",
           "\t\t_this.selected(project);",
           "\t\treturn;",
           "\t} catch (Error e) {",
           "\t\tGLib.debug(\"got error? %s\" , e.message);",
           "\t}",
           "\t ",
           "",
           "}",
           ""
          ]
         },
         "xtype" : "Button"
        },
        {
         "$ Gtk.Align halign" : "Gtk.Align.END",
         "$ xns" : "Gtk",
         "label" : "Cancel",
         "listeners" : {
          "clicked" : [
           "( ) => {",
           "   ",
           "    _this.el.hide();",
           "    return;",
           "    ",
           "",
           "}",
           ""
          ]
         },
         "xtype" : "Button"
        }
       ],
       "xtype" : "Box"
      }
     ],
     "xtype" : "Box"
    }
   ],
   "name" : "EditProject",
   "title" : "New Project",
   "xtype" : "Window",
   "| void showIt" : [
    "() {",
    "      ",
    "",
    "    //[ 'xtype'  ].forEach(function(k) {",
    "    //    _this.get(k).setValue(typeof(c[k]) == 'undefined' ? '' : c[k]);",
    "    //});",
    "\t// shouild set path..",
    "    _this.model.loadData();",
    "    this.el.show();",
    "    ",
    "}"
   ]
  }
 ],
 "modOrder" : "",
 "name" : "EditProject",
 "parent" : "",
 "path" : "/home/alan/gitlive/roobuilder/src/Builder4/EditProject.bjs",
 "permname" : "",
 "title" : ""
}