{
 "build_module" : "builder",
 "items" : [
  {
   "$ deletable" : true,
   "$ modal" : true,
   "$ xns" : "Gtk",
   "border_width" : 3,
   "default_height" : 500,
   "default_width" : 600,
   "items" : [
    {
     "$ homogeneous" : false,
     "$ pack" : [
      " get_content_area().add ",
      " ",
      ""
     ],
     "$ xns" : "Gtk",
     "Gtk.Orientation orientation" : "Gtk.Orientation.VERTICAL",
     "bool expand" : true,
     "items" : [
      {
       "$ homogeneous" : false,
       "$ xns" : "Gtk",
       "* pack" : "pack_start,false,true,3",
       "Gtk.Orientation orientation" : "Gtk.Orientation.HORIZONTAL",
       "items" : [
        {
         "$ xns" : "Gtk",
         "* pack" : "pack_start,false,true,3",
         "label" : "Project type :",
         "xtype" : "Label"
        },
        {
         "$ xns" : "Gtk",
         "* init" : [
          " this.el.add_attribute(_this.cellrender.el , \"markup\", 1 );  ",
          "  "
         ],
         "* pack" : "pack_end,true,true,3",
         "id" : "xtype",
         "items" : [
          {
           "$ xns" : "Gtk",
           "* pack" : "pack_start,true",
           "id" : "cellrender",
           "xtype" : "CellRendererText"
          },
          {
           "$ columns" : "typeof(string),typeof(string)",
           "$ xns" : "Gtk",
           "* pack" : "set_model",
           "id" : "model",
           "n_columns" : 2,
           "xtype" : "ListStore",
           "| void loadData" : [
            "  ( ) {",
            "        this.el.clear();",
            "                      ",
            "        Gtk.TreeIter iter;",
            "                ",
            "        el.append(out iter);",
            "        el.set_value(iter, 0, \"Roo\");",
            "        el.set_value(iter, 1, \"Roo Project\");",
            "        ",
            "        el.append(out iter);",
            "        el.set_value(iter, 0, \"Gtk\");",
            "        el.set_value(iter, 1, \"Gtk Project\");",
            "         ",
            "        el.append(out iter);",
            "        el.set_value(iter, 0, \"Flutter\");",
            "        el.set_value(iter, 1, \"Flutter Project\");",
            "              ",
            "                                     ",
            "}",
            ""
           ]
          }
         ],
         "xtype" : "ComboBox",
         "| string getValue" : [
          " () {",
          "     var ix = this.el.get_active();",
          "        if (ix < 0 ) {",
          "            return \"\";",
          "        }",
          "        switch(ix) {",
          "            case 0:",
          "                return \"Roo\";",
          "            case 1:",
          "                return \"Gtk\";",
          "           case 2:",
          "                return \"Flutter\";",
          "        }",
          "        return \"\";",
          "}",
          ""
         ]
        }
       ],
       "xtype" : "Box"
      },
      {
       "$ action" : "Gtk.FileChooserAction.SELECT_FOLDER",
       "$ create_folders" : false,
       "$ select_multiple" : false,
       "$ xns" : "Gtk",
       "* pack" : "pack_end,true,true,5",
       "bool expand" : true,
       "id" : "dir",
       "xtype" : "FileChooserWidget"
      }
     ],
     "xtype" : "Box"
    },
    {
     "$ xns" : "Gtk",
     "* pack" : "add_action_widget,1",
     "label" : "OK",
     "xtype" : "Button"
    },
    {
     "$ xns" : "Gtk",
     "* pack" : "add_action_widget,0",
     "label" : "Cancel",
     "xtype" : "Button"
    }
   ],
   "listeners" : {
    "destroy_event" : [
     "(self, event) => {",
     "\tthis.el.response(0);",
     "//     this.el.hide();",
     "    return false;",
     "}"
    ]
   },
   "name" : "EditProject",
   "title" : "Project Properties",
   "xtype" : "Dialog",
   "| Project.Project? show" : [
    "() {",
    "      ",
    "",
    "    //[ 'xtype'  ].forEach(function(k) {",
    "    //    _this.get(k).setValue(typeof(c[k]) == 'undefined' ? '' : c[k]);",
    "    //});",
    "\t// shouild set path..",
    "    _this.model.loadData();",
    "    this.el.show_all();",
    "    ",
    "    var err_dialog = StandardErrorDialog.singleton();",
    "",
    "    var id = -1;",
    "    while (id < 0) {",
    "         id =  this.el.run();",
    "         if (id < 1) {",
    "                this.el.hide();",
    "                return null;",
    "        }",
    " ",
    "         ",
    "      if (_this.xtype.getValue().length < 1) {",
    "           ",
    "            err_dialog.show(_this.el,\"You have to set Project type\");             ",
    "            id = -1;",
    "            continue;",
    "        }",
    "        if (_this.dir.el.get_filename().length < 1) {",
    "",
    "            err_dialog.show(_this.el,\"You have to select a folder\");             ",
    "            id = -1;",
    "            continue;",
    "        }",
    "           ",
    "    }",
    "    ",
    "    this.el.hide();",
    "    ",
    "    ",
    "    ",
    " ",
    "    var fn = _this.dir.el.get_filename();",
    "    print(\"add %s\\n\" , fn);",
    "    ",
    "    var project = Project.Project.factory(_this.xtype.getValue(), fn);",
    "    project.save();",
    "    Project.projects.set(project.name,project);",
    "    ",
    "    //var pr = imports.Builder.Provider.ProjectManager.ProjectManager.update(this.project);",
    "    ",
    "    return project;",
    "",
    "    ",
    "    //this.success = c.success;",
    "}",
    ""
   ]
  }
 ],
 "modOrder" : "",
 "name" : "EditProject",
 "parent" : "",
 "path" : "/home/alan/gitlive/roobuilder/src/Builder4/EditProject.bjs",
 "permname" : "",
 "title" : ""
}