{
 "build_module" : "builder",
 "items" : [
  {
   "$ deletable" : true,
   "$ xns" : "Gtk",
   "@ void canceled" : "()",
   "@ void selected" : "(Project.Project? proj)",
   "bool modal" : true,
   "default_height" : 500,
   "default_width" : 600,
   "items" : [
    {
     "$ homogeneous" : false,
     "$ xns" : "Gtk",
     "* prop" : "child",
     "Gtk.Orientation orientation" : "Gtk.Orientation.VERTICAL",
     "bool expand" : true,
     "int margin_bottom" : 10,
     "int margin_end" : 10,
     "int margin_start" : 10,
     "int margin_top" : 10,
     "items" : [
      {
       "$ xns" : "Gtk",
       "* columns" : 2,
       "int column_spacing" : 4,
       "int row_spacing" : 4,
       "items" : [
        {
         "$ xns" : "Gtk",
         "id" : "type_lbl",
         "string label" : "Create a Project from:",
         "xtype" : "Label"
        },
        {
         "$ uint selected" : "Gtk.INVALID_LIST_POSITION",
         "$ xns" : "Gtk",
         "* init" : [
          "{",
          "",
          "}",
          ""
         ],
         "bool hexpand" : true,
         "id" : "type_dd",
         "items" : [
          {
           "$ xns" : "Gtk",
           "* prop" : "model",
           "strings" : "{  \"New Folder\", \"Existing Folder\", \"Checkout from git\" }",
           "xtype" : "StringList"
          }
         ],
         "listeners" : {
          "notify[\"selected\"]" : [
           "( ) => {",
           "var m = (Gtk.StringList) this.el.model;",
           "\tGLib.debug(\"selected item: %s\", m.get_string(this.el.selected));",
           "\t",
           "\t",
           "\t_this.hideAll();\t",
           "\tswitch (m.get_string(this.el.selected)) {",
           "\t\tcase \"New Folder\":",
           "\t\t",
           "\t\tcase \"Existing Folder\":",
           "\t\t",
           "\t\tcase \"Checkout from git\":",
           "\t\t",
           "\t\tdefault:",
           "",
           "\t}\t\t",
           "} ",
           ""
          ]
         },
         "xtype" : "DropDown"
        },
        {
         "$ xns" : "Gtk",
         "id" : "folder_lbl",
         "string label" : "In Folder:",
         "xtype" : "Label"
        },
        {
         "$ xns" : "Gtk",
         "bool hexpand" : true,
         "id" : "folder_dd",
         "items" : [
          {
           "$ xns" : "Gtk",
           "* prop" : "model",
           "strings" : "{ \"gitlive\", \"Projects\", \"Select\" }",
           "xtype" : "StringList"
          }
         ],
         "xtype" : "DropDown"
        },
        {
         "$ xns" : "Gtk",
         "id" : "name_lbl",
         "string label" : "Named (New Folder Name)",
         "xtype" : "Label"
        },
        {
         "$ xns" : "Gtk",
         "bool hexpand" : true,
         "id" : "name_entry",
         "xtype" : "Entry"
        },
        {
         "$ xns" : "Gtk",
         "id" : "ptype_lbl",
         "label" : "Project type :",
         "xtype" : "Label"
        },
        {
         "$ xns" : "Gtk",
         "bool hexpand" : true,
         "id" : "ptype_dd",
         "items" : [
          {
           "$ xns" : "Gtk",
           "* prop" : "model",
           "strings" : "{ \"Roo\", \"Gtk\", \"WrappedGtk\", \"Flutter\" }",
           "xtype" : "StringList"
          }
         ],
         "xtype" : "DropDown"
        }
       ],
       "xtype" : "Grid"
      },
      {
       "$ homogeneous" : false,
       "$ xns" : "Gtk",
       "Gtk.Orientation orientation" : "Gtk.Orientation.HORIZONTAL",
       "bool hexpand" : true,
       "bool vexpand" : false,
       "int margin_bottom" : 10,
       "items" : [
        {
         "$ xns" : "Gtk",
         "int margin_end" : 4,
         "label" : "Project type :",
         "xtype" : "Label"
        },
        {
         "$ xns" : "Gtk",
         "* init" : [
          " this.el.add_attribute(_this.cellrender.el , \"markup\", 1 );  ",
          "  "
         ],
         "bool hexpand" : true,
         "id" : "xtype",
         "items" : [
          {
           "$ xns" : "Gtk",
           "* pack" : "pack_start,true",
           "id" : "cellrender",
           "xtype" : "CellRendererText"
          },
          {
           "$ columns" : "typeof(string),typeof(string)",
           "$ xns" : "Gtk",
           "* pack" : "set_model",
           "id" : "model",
           "n_columns" : 2,
           "xtype" : "ListStore",
           "| void loadData" : [
            "  ( ) {",
            "        this.el.clear();",
            "                      ",
            "        Gtk.TreeIter iter;",
            "                ",
            "        el.append(out iter);",
            "        el.set_value(iter, 0, \"Roo\");",
            "        el.set_value(iter, 1, \"Roo Project\");",
            "        ",
            "        el.append(out iter);",
            "        el.set_value(iter, 0, \"Gtk\");",
            "        el.set_value(iter, 1, \"Gtk Project\");",
            "         ",
            "        el.append(out iter);",
            "        el.set_value(iter, 0, \"Flutter\");",
            "        el.set_value(iter, 1, \"Flutter Project\");",
            "              ",
            "                                     ",
            "}",
            ""
           ]
          }
         ],
         "xtype" : "ComboBox",
         "| string getValue" : [
          " () {",
          "     var ix = this.el.get_active();",
          "        if (ix < 0 ) {",
          "            return \"\";",
          "        }",
          "        switch(ix) {",
          "            case 0:",
          "                return \"Roo\";",
          "            case 1:",
          "                return \"Gtk\";",
          "           case 2:",
          "                return \"Flutter\";",
          "        }",
          "        return \"\";",
          "}",
          ""
         ]
        }
       ],
       "xtype" : "Box"
      },
      {
       "$ homogeneous" : false,
       "$ xns" : "Gtk",
       "Gtk.Orientation orientation" : "Gtk.Orientation.HORIZONTAL",
       "bool hexpand" : true,
       "bool vexpand" : false,
       "int margin_bottom" : 10,
       "int spacing" : 0,
       "items" : [
        {
         "$ xns" : "Gtk",
         "int margin_end" : 4,
         "label" : "Folder:",
         "xtype" : "Label"
        },
        {
         "$ string? path" : "null",
         "$ xns" : "Gtk",
         "bool hexpand" : true,
         "id" : "dir",
         "listeners" : {
          "clicked" : [
           "( ) => {",
           "\tvar fd = new Gtk.FileDialog();",
           "\tfd.title = \"Select Folder\";",
           "\tfd.modal = true;",
           "\t",
           "\tfd.select_folder.begin(_this.el, null, (obj, res) => {",
           "\t \tvar f = fd.select_folder.end(res);",
           "\t\tthis.path = f.get_path();",
           "\t\tthis.el.label = this.path;",
           "\t});",
           "}",
           ""
          ]
         },
         "string label" : "Select Folder",
         "xtype" : "Button",
         "| void reset" : [
          "() {",
          "\tthis.el.label = \"Select Folder\";",
          "}"
         ]
        }
       ],
       "xtype" : "Box"
      },
      {
       "$ string? path" : "null",
       "$ xns" : "Gtk",
       "bool hexpand" : true,
       "id" : "ndir",
       "int margin_bottom" : 10,
       "listeners" : {
        "clicked" : [
         "( ) => {",
         "\tvar fd = new Gtk.FileDialog();",
         "\tfd.title = \"Create folder - then close this (it's buggy yes)\";",
         "\tfd.modal = true;",
         "\t",
         "\tfd.save.begin(_this.el, null, (obj, res) => {",
         "\t \t ",
         "\t});",
         "}",
         ""
        ]
       },
       "string label" : "Create a new Folder (use this to create folder as the select folder cant do it)",
       "xtype" : "Button"
      },
      {
       "$ Gtk.Align halign" : "Gtk.Align.FILL",
       "$ xns" : "Gtk",
       "Gtk.Orientation orientation" : "Gtk.Orientation.HORIZONTAL",
       "bool hexpand" : true,
       "items" : [
        {
         "$ Gtk.Align halign" : "Gtk.Align.START",
         "$ css_classes" : "{ \"suggested-action\" }",
         "$ xns" : "Gtk",
         "bool hexpand" : false,
         "label" : "OK",
         "listeners" : {
          "clicked" : [
           "( ) => {",
           "  var err_dialog = Xcls_StandardErrorDialog.singleton();",
           "",
           "   ",
           " ",
           "         ",
           "      if (_this.xtype.getValue().length < 1) {",
           "           ",
           "            err_dialog.show(_this.el,\"You have to set Project type\");             ",
           "            return;",
           "        }",
           "        if (_this.dir.path == null) {",
           "",
           "            err_dialog.show(_this.el,\"You have to select a folder\");             ",
           "            return;",
           "        }",
           "      ",
           "    ",
           "    _this.el.hide();",
           "    ",
           "    ",
           "",
           " ",
           "    var fn = _this.dir.path;",
           "    ",
           "    print(\"add %s\\n\" , fn);",
           "    try {",
           "\t\tvar project = Project.Project.factory(_this.xtype.getValue(), fn);",
           "\t\tproject.save();",
           "\t\tProject.projects.set(project.name,project);",
           "\t\t_this.selected(project);",
           "\t\treturn;",
           "\t} catch (Error e) {",
           "\t\tGLib.debug(\"got error? %s\" , e.message);",
           "\t}",
           "\t ",
           "",
           "}",
           ""
          ]
         },
         "xtype" : "Button"
        },
        {
         "$ xns" : "Gtk",
         "bool hexpand" : true,
         "string label" : "",
         "xtype" : "Label"
        },
        {
         "$ Gtk.Align halign" : "Gtk.Align.END",
         "$ xns" : "Gtk",
         "bool hexpand" : false,
         "label" : "Cancel",
         "listeners" : {
          "clicked" : [
           "( ) => {",
           "   ",
           "    _this.el.hide();",
           "\t_this.canceled();",
           "    ",
           "",
           "}",
           ""
          ]
         },
         "xtype" : "Button"
        }
       ],
       "xtype" : "Box"
      }
     ],
     "xtype" : "Box"
    }
   ],
   "name" : "EditProject",
   "title" : "New Project",
   "xtype" : "Window",
   "| void hideAll" : [
    "() {",
    "",
    "}"
   ],
   "| void show" : [
    "() {",
    "     ",
    "     ",
    "     // hide stuff..",
    "     _this.type_dd.el.selected = Gtk.INVALID_LIST_POSITION;",
    "     _this.folder_dd.el.selected = Gtk.INVALID_LIST_POSITION;",
    "     _this.ptype_dd.el.selected = Gtk.INVALID_LIST_POSITION;",
    "     ",
    "    //[ 'xtype'  ].forEach(function(k) {",
    "    //    _this.get(k).setValue(typeof(c[k]) == 'undefined' ? '' : c[k]);",
    "    //});",
    "\t// shouild set path..",
    "   ",
    "    this.el.show();",
    "    ",
    "}"
   ]
  }
 ],
 "modOrder" : "",
 "name" : "EditProject",
 "parent" : "",
 "path" : "/home/alan/gitlive/roobuilder/src/Builder4/EditProject.bjs",
 "permname" : "",
 "title" : ""
}