{
 "build_module" : "builder",
 "items" : [
  {
   "# JsRender.JsRender file" : "null",
   "# Project.Project project" : "",
   "$ xns" : "Gtk",
   "@ void success" : "(Project.Project pr, JsRender.JsRender file)",
   "Gtk.PositionType position" : "Gtk.PositionType.RIGHT",
   "Xcls_MainWindow mainwindow" : "null",
   "bool done" : false,
   "bool modal" : true,
   "id" : "PopoverFileDetails",
   "items" : [
    {
     "$ pack" : "add",
     "$ xns" : "Gtk",
     "Gtk.Orientation orientation" : "Gtk.Orientation.VERTICAL",
     "bool homogeneous" : false,
     "items" : [
      {
       "$ xns" : "Gtk",
       "* pack" : "pack_start,false,true,0",
       "string title" : "Add / Edit File",
       "xtype" : "HeaderBar"
      },
      {
       "$ homogeneous" : true,
       "$ xns" : "Gtk",
       "* pack" : "pack_start,false,false,4",
       "id" : "grid",
       "int margin_left" : 4,
       "int margin_right" : 4,
       "items" : [
        {
         "$ justify" : "Gtk.Justification.RIGHT",
         "$ xns" : "Gtk",
         "* pack" : "attach,0,0,1,1",
         "id" : "filetypelbl",
         "label" : "File type",
         "x_options" : 4,
         "xalign" : 0.90000000000000002,
         "xtype" : "Label"
        },
        {
         "$ xns" : "Gtk",
         "* init" : "this.el.add_attribute(_this.ftdbcellrenderer.el , \"markup\", 1 );",
         "* pack" : "attach,1,0,1,1",
         "id" : "filetype",
         "items" : [
          {
           "$ xns" : "Gtk",
           "* pack" : "pack_start,true",
           "id" : "ftdbcellrenderer",
           "xtype" : "CellRendererText"
          },
          {
           "$ columns" : "typeof(string),typeof(string)",
           "$ xns" : "Gtk",
           "* pack" : "set_model",
           "id" : "ftdbmodel",
           "n_columns" : 2,
           "xtype" : "ListStore",
           "| void loadData" : [
            "  (string cur) {",
            "    this.el.clear();                                    ",
            "    Gtk.TreeIter iter;",
            "    var el = this.el;",
            "    ",
            "   /// el.append(out iter);",
            "    ",
            "     ",
            "   // el.set_value(iter, 0, \"\");",
            "   // el.set_value(iter, 1, \"aaa  - Just add Element - aaa\");",
            "",
            "    el.append(out iter);",
            "",
            "    ",
            "    el.set_value(iter, 0, \"bjs\");",
            "    el.set_value(iter, 1, \"User Interface File (bjs)\");",
            "    _this.filetype.el.set_active_iter(iter);",
            "",
            "    el.append(out iter);",
            "    ",
            "    el.set_value(iter, 0, \"vala\");",
            "    el.set_value(iter, 1, \"Vala\");",
            "\tif (cur == \"vala\") {",
            "\t    _this.filetype.el.set_active_iter(iter);",
            "    }",
            "",
            "",
            "",
            "    el.append(out iter);",
            "    ",
            "    el.set_value(iter, 0, \"js\");",
            "    el.set_value(iter, 1, \"Javascript\");",
            "",
            "\tif (cur == \"js\") {",
            "\t    _this.filetype.el.set_active_iter(iter);",
            "    }",
            "",
            "    el.append(out iter);",
            "    ",
            "    el.set_value(iter, 0, \"css\");",
            "    el.set_value(iter, 1, \"CSS\");",
            "",
            "\tif (cur == \"css\") {",
            "\t    _this.filetype.el.set_active_iter(iter);",
            "    }",
            "                                     ",
            "}",
            ""
           ]
          }
         ],
         "listeners" : {
          "changed" : [
           "() => {",
           "\tGtk.TreeIter iter;",
           "\tbool is_bjs = true;",
           "\tif (this.el.get_active_iter(out iter)) {",
           "\t\tValue vfname;",
           "\t\t_this.ftdbmodel.el.get_value (iter, 0, out vfname);",
           "\t\t is_bjs = ((string)vfname) == \"bjs\";",
           "\t}",
           "    ",
           "  ",
           "    // directory is only available for non-bjs ",
           "    this.showhide(is_bjs);",
           "",
           "",
           "}",
           ""
          ]
         },
         "xtype" : "ComboBox",
         "| void showhide" : [
          "(bool is_bjs) {",
          "",
          "",
          "\tif (_this.project.xtype != \"Roo\") {",
          "\t \tis_bjs = false;",
          " \t}",
          "",
          "\tfor (var i = 2; i < 9;i++) {",
          "\t\tvar el = _this.grid.el.get_child_at(0,i);",
          "\t\t",
          "\t\tvar showhide= is_bjs;",
          "\t\tif (i> 7) {",
          "\t\t\tshowhide = !showhide;",
          "\t\t}",
          "\t\t",
          "\t\tif (showhide) {",
          "\t\t   el.show();",
          "\t\t} else {",
          "\t\t\tel.hide();",
          "\t\t}",
          "\t\t el = _this.grid.el.get_child_at(1,i);",
          "\t\tif (showhide) {",
          "\t\t   el.show();",
          "\t\t} else {",
          "\t\t\tel.hide();",
          "\t\t}     ",
          "    }",
          "    // load up the directories",
          "    //??? why can we not create bjs files in other directories??",
          "\t//if (!is_bjs && _this.file.path.length < 1) {",
          "\t",
          "\t\t_this.dirmodel.loadData();",
          "\t\t",
          "\t\t",
          "\t//}",
          "   ",
          "    ",
          "}",
          ""
         ]
        },
        {
         "$ justify" : "Gtk.Justification.RIGHT",
         "$ xns" : "Gtk",
         "* pack" : "attach,0,1,1,1",
         "label" : "Component Name",
         "x_options" : 4,
         "xalign" : 0.90000000000000002,
         "xtype" : "Label"
        },
        {
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,1,1,1,1",
         "id" : "name",
         "xtype" : "Entry"
        },
        {
         "$ justify" : "Gtk.Justification.RIGHT",
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,0,2,1,1",
         "label" : "Title",
         "x_options" : 4,
         "xalign" : 0.90000000000000002,
         "xtype" : "Label"
        },
        {
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,1,2,1,1",
         "id" : "title",
         "xtype" : "Entry"
        },
        {
         "$ justify" : "Gtk.Justification.RIGHT",
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,0,3,1,1",
         "label" : "Region",
         "tooltip_text" : "center, north, south, east, west",
         "x_options" : 4,
         "xalign" : 0.90000000000000002,
         "xtype" : "Label"
        },
        {
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,1,3,1,1",
         "id" : "region",
         "xtype" : "Entry"
        },
        {
         "$ justify" : "Gtk.Justification.RIGHT",
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,0,4,1,1",
         "label" : "Parent Name",
         "x_options" : 4,
         "xalign" : 0.90000000000000002,
         "xtype" : "Label"
        },
        {
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,1,4,1,1",
         "id" : "parent",
         "xtype" : "Entry"
        },
        {
         "$ justify" : "Gtk.Justification.RIGHT",
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,0,5,1,1",
         "label" : "Permission Name",
         "x_options" : 4,
         "xalign" : 0.90000000000000002,
         "xtype" : "Label"
        },
        {
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,1,5,1,1",
         "id" : "permname",
         "xtype" : "Entry"
        },
        {
         "$ justify" : "Gtk.Justification.RIGHT",
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,0,6,1,1",
         "label" : "Order (for tabs)",
         "x_options" : 4,
         "xalign" : 0.90000000000000002,
         "xtype" : "Label"
        },
        {
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,1,6,1,1",
         "id" : "modOrder",
         "xtype" : "Entry"
        },
        {
         "$ justify" : "Gtk.Justification.RIGHT",
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,0,7,1,1",
         "label" : "Module to build (Vala only)",
         "x_options" : 4,
         "xalign" : 0.90000000000000002,
         "xtype" : "Label"
        },
        {
         "$ xns" : "Gtk",
         "* init" : "this.el.add_attribute(_this.dbcellrenderer.el , \"markup\", 1 );",
         "* pack" : "attach,1,7,1,1",
         "id" : "build_module",
         "items" : [
          {
           "$ xns" : "Gtk",
           "* pack" : "pack_start,true",
           "id" : "dbcellrenderer",
           "xtype" : "CellRendererText"
          },
          {
           "$ columns" : "typeof(string),typeof(string)",
           "$ xns" : "Gtk",
           "* pack" : "set_model",
           "id" : "dbmodel",
           "n_columns" : 2,
           "xtype" : "ListStore",
           "| void loadData" : [
            "  (Gee.ArrayList<string> data, string cur) {",
            "    this.el.clear();                                    ",
            "    Gtk.TreeIter iter;",
            "    var el = this.el;",
            "    ",
            "   /// el.append(out iter);",
            "    ",
            "     ",
            "   // el.set_value(iter, 0, \"\");",
            "   // el.set_value(iter, 1, \"aaa  - Just add Element - aaa\");",
            "",
            "    el.append(out iter);",
            "",
            "    ",
            "    el.set_value(iter, 0, \"\");",
            "    el.set_value(iter, 1, \"-- select a module --\");",
            "    _this.build_module.el.set_active_iter(iter);",
            "    ",
            "    for (var i = 0; i < data.size;i++) {",
            "    ",
            "",
            "        el.append(out iter);",
            "        ",
            "        el.set_value(iter, 0, data.get(i));",
            "        el.set_value(iter, 1, data.get(i));",
            "        ",
            "        if (data.get(i) == cur) {",
            "            _this.build_module.el.set_active_iter(iter);",
            "        }",
            "        ",
            "    }",
            "     this.el.set_sort_column_id(0, Gtk.SortType.ASCENDING);          ",
            "                                     ",
            "}",
            ""
           ]
          }
         ],
         "xtype" : "ComboBox"
        },
        {
         "$ justify" : "Gtk.Justification.RIGHT",
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,0,8,1,1",
         "label" : "Directory",
         "x_options" : 4,
         "xalign" : 0.90000000000000002,
         "xtype" : "Label"
        },
        {
         "$ xns" : "Gtk",
         "* init" : "this.el.add_attribute(_this.dircellrenderer.el , \"markup\", 1 );",
         "* pack" : "attach,1,8,1,1",
         "id" : "dir",
         "items" : [
          {
           "$ xns" : "Gtk",
           "* pack" : "pack_start,true",
           "id" : "dircellrenderer",
           "xtype" : "CellRendererText"
          },
          {
           "$ columns" : "typeof(string),typeof(string)",
           "$ xns" : "Gtk",
           "* pack" : "set_model",
           "id" : "dirmodel",
           "n_columns" : 2,
           "xtype" : "ListStore",
           "| void loadData" : [
            "  () {",
            "\t",
            "\t",
            "  ",
            "    this.el.clear();                                    ",
            "    ",
            "    if (!(_this.project is Project.Gtk)) {",
            "\t\treturn;",
            "\t}",
            "    var sd = ((Project.Gtk)_this.project).sourcedirs();",
            "    ",
            "    Gtk.TreeIter iter;",
            "    var el = this.el;",
            "    ",
            "   /// el.append(out iter);",
            "    ",
            "     ",
            "   // el.set_value(iter, 0, \"\");",
            "   // el.set_value(iter, 1, \"aaa  - Just add Element - aaa\");",
            "",
            "//    el.append(out iter);",
            "",
            "    ",
            "//    el.set_value(iter, 0, \"\");",
            "  //  el.set_value(iter, 1, \"-- select a directoyr --\");",
            "    //_this.build_module.el.set_active_iter(iter);",
            "    ",
            "    for (var i = 0; i < sd.length;i++) {",
            "    ",
            "",
            "        el.append(out iter);",
            "        ",
            "        el.set_value(iter, 0, sd[i]);",
            "        el.set_value(iter, 1, sd[i]);",
            "        ",
            "        //if (data.get(i) == cur) {",
            "        //    _this.build_module.el.set_active_iter(iter);",
            "       // }",
            "        ",
            "    }",
            "  //  this.el.set_sort_column_id(0, Gtk.SortType.ASCENDING);          ",
            "                                     ",
            "}",
            ""
           ]
          }
         ],
         "xtype" : "ComboBox"
        }
       ],
       "n_columns" : 2,
       "n_rows" : 7,
       "uint row_spacing" : 2,
       "xtype" : "Grid"
      },
      {
       "$ xns" : "Gtk",
       "* pack" : "pack_end,false,true,0",
       "int margin_bottom" : 4,
       "int margin_left" : 4,
       "int margin_right" : 4,
       "items" : [
        {
         "$ xns" : "Gtk",
         "* pack" : "add",
         "listeners" : {
          "clicked" : [
           "() => { ",
           "",
           "  _this.done = true;",
           "    _this.el.hide(); ",
           "}"
          ]
         },
         "string label" : "Cancel",
         "xtype" : "Button"
        },
        {
         "$ xns" : "Gtk",
         "* pack" : "add",
         "id" : "save_btn",
         "listeners" : {
          "clicked" : [
           "( ) =>  { ",
           "",
           " ",
           "",
           "",
           "\tif (_this.name.el.get_text().length  < 1) {",
           "\t    Xcls_StandardErrorDialog.singleton().show(",
           "\t        _this.mainwindow.el,",
           "\t        \"You have to set Component name \"",
           "\t    );",
           "\t     ",
           "\t    return;",
           "\t}",
           "\t// what does this do?",
           "\t",
           "\tvar isNew = _this.file.name.length  > 0 ? false : true;",
           "\t/*",
           "\tif (!isNew && this.file.name != _this.name.el.get_text()) {",
           "\t    Xcls_StandardErrorDialog.singleton().show(",
           "\t        this.el,",
           "\t        \"Sorry changing names does not work yet. \"",
           "\t    );",
           "\t     ",
           "\t    return;",
           "\t}",
           "\t*/",
           "\t ",
           "\t",
           "  ",
           "\t// FIXME - this may be more complicated...",
           "\t//for (var i in this.def) {",
           "\t//    this.file[i] =  this.get(i).el.get_text();",
           "\t//}",
           "",
           "\tif (!isNew) {",
           "\t    try {",
           "\t         _this.updateFileFromEntry();",
           "\t     } catch( JsRender.Error.RENAME_FILE_EXISTS er) {",
           "\t          Xcls_StandardErrorDialog.singleton().show(",
           "\t            _this.mainwindow.el,",
           "\t            \"The name you used already exists \"",
           "\t        );",
           "\t        return;",
           "\t         ",
           "\t     }",
           "",
           "\t      _this.done = true;",
           "\t    _this.file.save();",
           "\t    _this.el.hide();",
           "\t    return;",
           "\t}",
           "\t",
           "\t// ---------------- NEW FILES...",
           "\tGtk.TreeIter iter;",
           "",
           "\tif (!_this.filetype.el.get_active_iter(out iter)) {",
           "\t\t// should not happen...",
           "\t\t// so we are jut going to return without ",
           "\t\tXcls_StandardErrorDialog.singleton().show(",
           "\t        _this.mainwindow.el,",
           "\t        \"You must select a file type. \"",
           "\t    );",
           "\t    return;",
           "\t\t ",
           "\t}",
           "\t",
           "\t",
           "\tvar fn = _this.name.el.get_text();",
           "\t",
           "\tValue ftypename;",
           "\t_this.ftdbmodel.el.get_value (iter, 0, out ftypename);",
           "\tvar ext = ((string)ftypename);",
           "\tvar dir = _this.project.firstPath(); ",
           "\tif (ext != \"bjs\") {",
           "\t ",
           "\t\tif (!_this.dir.el.get_active_iter(out iter)) {",
           "\t\t\t// should not happen...",
           "\t\t\t// so we are jut going to return without ",
           "\t\t\tXcls_StandardErrorDialog.singleton().show(",
           "\t\t\t    _this.mainwindow.el,",
           "\t\t\t    \"You must select a directory \"",
           "\t\t\t);",
           "\t\t\treturn;",
           "\t\t}",
           "\t\tValue vdir;",
           "\t\t_this.dirmodel.el.get_value (iter, 0, out vdir);",
           "\t\tdir = (string)vdir;",
           "\t}",
           "\t",
           "\tvar targetfile = dir + \"/\" + fn;",
           "\t",
           "\t// strip the file type off the end..",
           "\t",
           "\t",
           "    var rx = new GLib.Regex(\"\\\\.\" + ext + \"$\",GLib.RegexCompileFlags.CASELESS);",
           "    targetfile = rx.replace(targetfile, targetfile.length, 0, \"\"); ",
           "   ",
           "\tif (GLib.FileUtils.test(targetfile + \".\" + ext, GLib.FileTest.EXISTS)) {",
           "\t    Xcls_StandardErrorDialog.singleton().show(",
           "\t        _this.mainwindow.el,",
           "\t        \"That file already exists\"",
           "\t    ); ",
           "\t    return;",
           "\t}",
           "   ",
           "   var f =  JsRender.JsRender.factory(",
           "\t\text == \"bjs\" ? _this.file.project.xtype : \"PlainFile\",  ",
           "\t\t_this.file.project, ",
           "\t\ttargetfile + \".\" + ext);",
           "",
           "\t_this.file = f;",
           "\t",
           "",
           "\t",
           "\t_this.updateFileFromEntry();",
           "\t_this.file.loaded = true;",
           "\t_this.file.save();",
           "\tif (ext == \"bjs\") {",
           "\t\t_this.file.project.addFile(_this.file);",
           "\t}",
           "\t",
           " ",
           "\t// what about .js ?",
           "   _this.done = true;",
           "\t_this.el.hide();",
           "",
           "// hopefull this will work with bjs files..",
           "\t",
           "\t_this.success(_this.project, _this.file);",
           "   ",
           "}"
          ]
         },
         "string label" : "Save",
         "xtype" : "Button"
        }
       ],
       "xtype" : "HButtonBox"
      }
     ],
     "xtype" : "Box"
    }
   ],
   "listeners" : {
    "closed" : [
     "() => {",
     "  if (!this.done) {",
     "    _this.el.show();",
     "  ",
     "  }",
     "} "
    ]
   },
   "uint border_width" : 0,
   "xtype" : "Popover",
   "|   void updateFileFromEntry" : [
    "() {",
    "",
    "        _this.file.title = _this.title.el.get_text();",
    "        _this.file.region = _this.region.el.get_text();            ",
    "        _this.file.parent = _this.parent.el.get_text();                        ",
    "        _this.file.permname = _this.permname.el.get_text();                                    ",
    "        _this.file.modOrder = _this.modOrder.el.get_text();",
    "        ",
    "        if (_this.file.name.length  > 0 && _this.file.name != _this.name.el.get_text()) {",
    "            _this.file.renameTo(_this.name.el.get_text());",
    "        }",
    "        // store the module...",
    "        _this.file.build_module = \"\";        ",
    "         Gtk.TreeIter iter; ",
    "        if (_this.build_module.el.get_active_iter (out iter)) {",
    "             Value vfname;",
    "             this.dbmodel.el.get_value (iter, 0, out vfname);",
    "             if (((string)vfname).length > 0) {",
    "                 _this.file.build_module = (string)vfname;",
    "             }",
    "    ",
    "        }",
    "        ",
    "        ",
    "",
    "                                                    ",
    "}    "
   ],
   "| void show" : [
    "(JsRender.JsRender c, Gtk.Widget btn) ",
    "{",
    "    this.project = c.project;",
    "    this.done = false;",
    "    ",
    "    ",
    "    //if (!this.el) {",
    "        //this.init();",
    "     //}",
    "    ",
    "    _this.name.el.set_text(c.name);",
    "    _this.title.el.set_text(c.title);",
    "    _this.parent.el.set_text(c.parent);    ",
    "    _this.region.el.set_text(c.region);",
    "    _this.modOrder.el.set_text(c.modOrder);",
    "     _this.permname.el.set_text(c.permname);",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "     var ar = new Gee.ArrayList<string>();",
    "     _this.dbmodel.loadData(ar,\"\");",
    "    // load the modules... if relivant..",
    "    if (this.project.xtype == \"Gtk\") {",
    "        var p = (Project.Gtk)c.project;",
    "          var cg = p.compilegroups;",
    "",
    "        var iter = cg.map_iterator();",
    "       while(iter.next()) {",
    "            var key = iter.get_key();",
    "            if (key == \"_default_\") {",
    "                continue;",
    "            }",
    "            ar.add(key);",
    "        };",
    "        _this.dbmodel.loadData(ar, c.build_module);",
    "",
    "    }",
    "    ",
    "     ",
    "    _this.file = c;",
    "    //console.log('show all');",
    "   this.el.set_modal(true);",
    "    this.el.set_relative_to(btn);",
    "",
    "    this.el.set_position(Gtk.PositionType.RIGHT);",
    "    ",
    "    // window + header?",
    "     print(\"SHOWALL - POPIP\\n\");",
    "    this.el.show_all();",
    "    this.name.el.grab_focus();",
    "    ",
    "    ",
    "    ",
    "    if (c.path.length > 0) {",
    "\t    this.save_btn.el.set_label(\"Save\");",
    "\t\t_this.filetype.el.hide();",
    "\t\t_this.filetypelbl.el.hide();",
    "\t\t_this.filetype.showhide(true); // as we only work on bjs files currently",
    "    } else {",
    "        this.save_btn.el.set_label(\"Create\");",
    "        _this.ftdbmodel.loadData(\"bjs\"); // fixme - need to determine type..",
    "\t    _this.filetype.el.show();",
    "\t    _this.filetypelbl.el.show();",
    "    }",
    "    ",
    "    ",
    "    //this.success = c.success;",
    "    ",
    "    ",
    "}"
   ]
  }
 ],
 "modOrder" : "",
 "name" : "PopoverFileDetails",
 "parent" : "",
 "path" : "/home/alan/gitlive/roobuilder/src/Builder4/PopoverFileDetails.bjs",
 "permname" : "",
 "title" : ""
}