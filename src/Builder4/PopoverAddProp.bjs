{
 "build_module" : "",
 "items" : [
  {
   "# JsRender.NodePropType ptype" : "",
   "$ xns" : "Gtk",
   "@ void select" : "(JsRender.NodeProp prop)",
   "Gtk.PositionType position" : "Gtk.PositionType.RIGHT",
   "Xcls_MainWindow mainwindow" : "",
   "bool active" : false,
   "bool hexpand" : false,
   "bool modal" : true,
   "id" : "PopoverAddProp",
   "int height_request" : 800,
   "int width_request" : 900,
   "items" : [
    {
     "$ shadow_type" : "Gtk.ShadowType.IN",
     "$ xns" : "Gtk",
     "* init" : [
      "    this.el.set_policy (Gtk.PolicyType.AUTOMATIC, Gtk.PolicyType.AUTOMATIC);",
      " "
     ],
     "* pack" : "add",
     "items" : [
      {
       "$ enable_tree_lines" : true,
       "$ headers_visible" : true,
       "$ xns" : "Gtk",
       "* init" : [
        "{  ",
        "   ",
        "\tthis.css = new Gtk.CssProvider();",
        "\ttry {",
        "\t\tthis.css.load_from_data(\"#popover-add-prop-view { font-sze: 12px;}\");",
        "\t} catch (Error e) {}",
        "   this.el.get_style_context().add_provider(this.css,Gtk.STYLE_PROVIDER_PRIORITY_APPLICATION);",
        "\t ",
        "\t ",
        "                    ",
        "    this.el.get_selection().set_mode( Gtk.SelectionMode.SINGLE);",
        " ",
        "",
        "    ",
        "  ",
        "    ",
        "}",
        ""
       ],
       "* pack" : "add",
       "Gtk.CssProvider css" : "",
       "items" : [
        {
         "$ columns" : [
          "",
          "typeof(JsRender.NodeProp),  // 0 real key",
          "typeof(string),  // 1 text display",
          "typeof(string),  // 2 tooltip",
          "typeof(string),  // 3 sortable string",
          "typeof(string), // 4  prop type",
          "typeof(string) // 5 from interface",
          "",
          " "
         ],
         "$ xns" : "Gtk",
         "* pack" : "set_model",
         "id" : "model",
         "n_columns" : 6,
         "xtype" : "ListStore",
         "| JsRender.NodeProp getValue" : [
          "(Gtk.TreeIter iter)",
          "{",
          "",
          "    GLib.Value value;",
          "    this.el.get_value(iter, 0, out value);",
          " ",
          "    return (JsRender.NodeProp)value;",
          "    ",
          "}"
         ]
        },
        {
         "$ xns" : "Gtk",
         "* init" : [
          "  this.el.add_attribute(_this.namerender.el , \"markup\", 1  );",
          " ",
          "  this.el.add_attribute(_this.namerender.el , \"tooltip\", 2  );"
         ],
         "* pack" : "append_column",
         "id" : "namecol",
         "int sort_column_id" : 3,
         "items" : [
          {
           "$ xns" : "Gtk",
           "* pack" : "pack_start,true",
           "id" : "namerender",
           "xtype" : "CellRendererText"
          }
         ],
         "utf8 title" : "Double click to add",
         "xtype" : "TreeViewColumn"
        },
        {
         "$ xns" : "Gtk",
         "* init" : [
          "  this.el.add_attribute(_this.typerender.el , \"text\", 4  );",
          " ",
          ""
         ],
         "* pack" : "append_column",
         "id" : "type",
         "int sort_column_id" : 4,
         "items" : [
          {
           "$ xns" : "Gtk",
           "* pack" : "pack_start,true",
           "id" : "typerender",
           "xtype" : "CellRendererText"
          }
         ],
         "string title" : "Type",
         "xtype" : "TreeViewColumn"
        },
        {
         "$ xns" : "Gtk",
         "* init" : [
          "  this.el.add_attribute(_this.fromrender.el , \"text\", 5);",
          " ",
          ""
         ],
         "* pack" : "append_column",
         "id" : "from",
         "int sort_column_id" : 5,
         "items" : [
          {
           "$ xns" : "Gtk",
           "* pack" : "pack_start,true",
           "id" : "fromrender",
           "xtype" : "CellRendererText"
          }
         ],
         "string title" : "From",
         "xtype" : "TreeViewColumn"
        }
       ],
       "listeners" : {
        "row_activated" : [
         "(path, column)  => {",
         "",
         "\tGtk.TreeIter iter;",
         "",
         "",
         "\tvar m = _this.model;",
         "",
         "\tm.el.get_iter(out iter,path);",
         "",
         " ",
         "\tvar prop = m.getValue(iter);",
         " ",
         "",
         "\t// hide the popover",
         "\t_this.el.hide();",
         "\t ",
         "\t",
         "\t_this.select(prop);",
         " ",
         "}",
         " "
        ]
       },
       "string name" : "popover-add-prop-view",
       "tooltip_column" : 2,
       "xtype" : "TreeView"
      }
     ],
     "xtype" : "ScrolledWindow"
    }
   ],
   "xtype" : "Popover",
   "| void clear" : [
    "() {",
    " this.model.el.clear();",
    "}",
    ""
   ],
   "| void hide" : [
    "() {",
    "\tthis.ptype = JsRender.NodePropType.NONE;",
    "\tthis.el.hide();",
    "}",
    ""
   ],
   "| void show" : [
    "(Palete.Palete pal, JsRender.NodePropType ptype, string xtype,  Gtk.Widget onbtn) {",
    "",
    "    /// what does this do?",
    "    //if (this.prop_or_listener  != \"\" && this.prop_or_listener == prop_or_listener) {",
    "    //\tthis.prop_or_listener = \"\";",
    "    //\tthis.el.hide();",
    "    //\treturn;",
    "\t//}",
    "\t",
    "\t",
    "\t",
    "    this.ptype = ptype;",
    "    ",
    "    this.model.el.clear();",
    "",
    "    Gtk.TreeIter iter;",
    "    var elementList = pal.getPropertiesFor( xtype, ptype);",
    "     ",
    "    //print (\"GOT \" + elementList.length + \" items for \" + fullpath + \"|\" + type);",
    "           // console.dump(elementList);",
    "           ",
    "    var miter = elementList.map_iterator();",
    "    while (miter.next()) {",
    "       var p = miter.get_value();",
    "        ",
    "        this.model.el.append(out iter);",
    "\t\t",
    "\t\tvar prop = p.toNodeProp();",
    "\t\t",
    "\t \t ",
    "",
    "        this.model.el.set(iter,",
    "                0,  prop, ",
    "                1,  prop.to_property_option_markup(p.propertyof == xtype),",
    "                2,  prop.to_property_option_tooltip(),                ",
    "                3,  prop.name,",
    "                4,  prop.rtype,",
    "                5,  p.propertyof,",
    "                -1",
    "        );",
    "    }",
    "    this.model.el.set_sort_column_id(3,Gtk.SortType.ASCENDING);    ",
    "    ",
    "    // set size up...",
    "    ",
    "",
    "    int w,h;",
    "    this.mainwindow.el.get_size(out w, out h);",
    "    ",
    "    // left tree = 250, editor area = 500?",
    "    ",
    "    // min 450?",
    "\t// max hieght ...",
    "    this.el.set_size_request( 550, h);",
    "",
    "    ",
    "",
    "    if (this.el.relative_to == null) {",
    "        this.el.set_relative_to(onbtn);",
    "    }",
    "    this.el.show_all();",
    "   ",
    "    while(Gtk.events_pending()) { ",
    "            Gtk.main_iteration();   // why?",
    "    }       ",
    " //   this.hpane.el.set_position( 0);",
    "}",
    ""
   ]
  }
 ],
 "modOrder" : "",
 "name" : "PopoverAddProp",
 "parent" : "",
 "path" : "/home/alan/gitlive/roobuilder/src/Builder4/PopoverAddProp.bjs",
 "permname" : "",
 "title" : ""
}