{
 "build_module" : "builder",
 "items" : [
  {
   "$ shadow_type" : "Gtk.ShadowType.IN",
   "$ xns" : "Gtk",
   "* init" : [
    "    this.el.set_policy (Gtk.PolicyType.AUTOMATIC, Gtk.PolicyType.AUTOMATIC);",
    " "
   ],
   "@ void select" : "(string key, string type, string skel, string etype)",
   "id" : "WindowAddProp",
   "items" : [
    {
     "$ enable_tree_lines" : true,
     "$ headers_visible" : true,
     "$ xns" : "Gtk",
     "* init" : [
      "{  ",
      "       var description = new Pango.FontDescription();",
      "     description.set_size(8000);",
      "    this.el.override_font(description);     ",
      "                    ",
      "    this.el.get_selection().set_mode( Gtk.SelectionMode.SINGLE);",
      " ",
      "",
      "    ",
      "  ",
      "    ",
      "}",
      ""
     ],
     "* pack" : "add",
     "items" : [
      {
       "$ columns" : [
        "typeof(string),  // 0 real key",
        "typeof(string), // 1 real type",
        "typeof(string), // 2 docs ?",
        "typeof(string), // 3 visable desc",
        "typeof(string), // 4 function desc",
        "typeof(string) // 5 element type (event|prop)",
        "        "
       ],
       "$ xns" : "Gtk",
       "* pack" : "set_model",
       "id" : "model",
       "n_columns" : 6,
       "xtype" : "ListStore",
       "| string getValue" : [
        "(Gtk.TreeIter iter, int col)",
        "{",
        "",
        "    GLib.Value value;",
        "    this.el.get_value(iter, col, out value);",
        "",
        "    return (string)value;",
        "    ",
        "}"
       ]
      },
      {
       "$ xns" : "Gtk",
       "* init" : [
        "  this.el.add_attribute(_this.namerender.el , \"markup\", 4  );",
        " ",
        ""
       ],
       "* pack" : "append_column",
       "id" : "namecol",
       "items" : [
        {
         "$ xns" : "Gtk",
         "* pack" : "pack_start,true",
         "id" : "namerender",
         "xtype" : "CellRendererText"
        }
       ],
       "utf8 title" : "Double click to add",
       "xtype" : "TreeViewColumn"
      }
     ],
     "listeners" : {
      "row_activated" : [
       "(path, column)  => {",
       "",
       "        Gtk.TreeIter iter;",
       "",
       "",
       "        var m = _this.model;",
       "        ",
       "        m.el.get_iter(out iter,path);",
       "        ",
       "        ",
       "        // var val = \"\";",
       "        ",
       "        ",
       "        var key = m.getValue(iter, 0);",
       "        ",
       "        var type = m.getValue(iter, 1);",
       "        var skel = m.getValue(iter, 3);",
       "        var etype = m.getValue(iter, 5);",
       "        ",
       "        ",
       "        _this.select(key,etype == \"signals\" ? \"\" : type,skel, etype);",
       "        ",
       "}",
       " "
      ]
     },
     "tooltip_column" : 2,
     "xtype" : "TreeView"
    }
   ],
   "xtype" : "ScrolledWindow",
   "| void clear" : [
    "() {",
    "    this.model.el.clear();",
    "",
    "}"
   ],
   "| void show" : [
    "(Palete.Palete pal, string etype, string xtype) {",
    "    this.model.el.clear();",
    "",
    "    Gtk.TreeIter iter;",
    "    var elementList = pal.getPropertiesFor( xtype,etype);",
    "    ",
    "    ",
    "    //print (\"GOT \" + elementList.length + \" items for \" + fullpath + \"|\" + type);",
    "           // console.dump(elementList);",
    "           ",
    "    var miter = elementList.map_iterator();",
    "    while (miter.next()) {",
    "       var p = miter.get_value();",
    "        ",
    "        this.model.el.append(out iter);",
    "",
    "\t\tvar dname = p.name;",
    "\t\tvar dtype = p.type;",
    "\t\t ",
    "",
    "        this.model.el.set(iter,",
    "                0,  p.name, ",
    "                1, p.type,",
    "                2, \"<b>\" + p.name +\"</b> <i>\"+p.type+\"</i>\\n\" + ",
    "                        GLib.Markup.escape_text(p.doctxt),",
    "                3, p.sig,",
    "                4, \"<b>\" + dname +\"</b> <span size=\\\"small\\\"><i>\"+dtype+\"</i></span>\",",
    "                5, etype,",
    "                -1",
    "        );",
    "    }",
    "    this.model.el.set_sort_column_id(0,Gtk.SortType.ASCENDING);",
    "                             ",
    "}",
    ""
   ]
  }
 ],
 "modOrder" : "",
 "name" : "WindowAddProp",
 "parent" : "",
 "path" : "/home/alan/gitlive/roobuilder/src/Builder4/WindowAddProp.bjs",
 "permname" : "",
 "title" : ""
}