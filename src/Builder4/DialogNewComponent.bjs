{
 "build_module" : "",
 "items" : [
  {
   "# JsRender.JsRender file" : "null",
   "# Project.Project project" : "",
   "$ deletable" : true,
   "$ modal" : true,
   "$ xns" : "Gtk",
   "@ void success" : "(Project.Project pr, JsRender.JsRender file)",
   "default_height" : 200,
   "default_width" : 500,
   "id" : "DialogNewComponent",
   "items" : [
    {
     "$ pack" : "get_content_area().add",
     "$ xns" : "Gtk",
     "Gtk.Orientation orientation" : "Gtk.Orientation.VERTICAL",
     "items" : [
      {
       "$ homogeneous" : true,
       "$ xns" : "Gtk",
       "* pack" : "pack_start,false,false,0",
       "items" : [
        {
         "$ xns" : "Gtk",
         "* pack" : "attach,0,0",
         "Gtk.Justification justify" : "Gtk.Justification.RIGHT",
         "label" : "Component Name",
         "x_options" : 4,
         "xalign" : 0.90000000000000002,
         "xtype" : "Label"
        },
        {
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,1,0",
         "id" : "name",
         "xtype" : "Entry"
        },
        {
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,0,1",
         "Gtk.Justification justify" : "Gtk.Justification.RIGHT",
         "label" : "Title",
         "x_options" : 4,
         "xalign" : 0.90000000000000002,
         "xtype" : "Label"
        },
        {
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,1,1",
         "id" : "title",
         "xtype" : "Entry"
        },
        {
         "$ justify" : "Gtk.Justification.RIGHT",
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,0,2",
         "label" : "Region",
         "tooltip_text" : "center, north, south, east, west",
         "x_options" : 4,
         "xalign" : 0.90000000000000002,
         "xtype" : "Label"
        },
        {
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,1,2",
         "id" : "region",
         "xtype" : "Entry"
        },
        {
         "$ justify" : "Gtk.Justification.RIGHT",
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,0,3",
         "label" : "Parent Name",
         "x_options" : 4,
         "xalign" : 0.90000000000000002,
         "xtype" : "Label"
        },
        {
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,1,3",
         "id" : "parent",
         "xtype" : "Entry"
        },
        {
         "$ justify" : "Gtk.Justification.RIGHT",
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,0,4",
         "label" : "Permission Name",
         "x_options" : 4,
         "xalign" : 0.90000000000000002,
         "xtype" : "Label"
        },
        {
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,1,4",
         "id" : "permname",
         "xtype" : "Entry"
        },
        {
         "$ justify" : "Gtk.Justification.RIGHT",
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,0,6",
         "label" : "Order (for tabs)",
         "x_options" : 4,
         "xalign" : 0.90000000000000002,
         "xtype" : "Label"
        },
        {
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,1,6",
         "id" : "modOrder",
         "xtype" : "Entry"
        },
        {
         "$ justify" : "Gtk.Justification.RIGHT",
         "$ visible" : true,
         "$ xns" : "Gtk",
         "* pack" : "attach,0,7",
         "label" : "Module to build (Vala only)",
         "x_options" : 4,
         "xalign" : 0.90000000000000002,
         "xtype" : "Label"
        },
        {
         "$ xns" : "Gtk",
         "* init" : "this.el.add_attribute(_this.dbcellrenderer.el , \"markup\", 1 );",
         "* pack" : "attach,1,7",
         "id" : "build_module",
         "items" : [
          {
           "$ xns" : "Gtk",
           "* pack" : "pack_start,true",
           "id" : "dbcellrenderer",
           "xtype" : "CellRendererText"
          },
          {
           "$ columns" : "typeof(string),typeof(string)",
           "$ xns" : "Gtk",
           "* pack" : "set_model",
           "id" : "dbmodel",
           "n_columns" : 2,
           "xtype" : "ListStore",
           "| void loadData" : [
            "  (Gee.ArrayList<string> data, string cur) {",
            "    this.el.clear();                                    ",
            "    Gtk.TreeIter iter;",
            "    var el = this.el;",
            "    ",
            "   /// el.append(out iter);",
            "    ",
            "     ",
            "   // el.set_value(iter, 0, \"\");",
            "   // el.set_value(iter, 1, \"aaa  - Just add Element - aaa\");",
            "",
            "    el.append(out iter);",
            "",
            "    ",
            "    el.set_value(iter, 0, \"\");",
            "    el.set_value(iter, 1, \"-- select a module --\");",
            "    _this.build_module.el.set_active_iter(iter);",
            "    ",
            "    for (var i = 0; i < data.size;i++) {",
            "    ",
            "",
            "        el.append(out iter);",
            "        ",
            "        el.set_value(iter, 0, data.get(i));",
            "        el.set_value(iter, 1, data.get(i));",
            "        ",
            "        if (data.get(i) == cur) {",
            "            _this.build_module.el.set_active_iter(iter);",
            "        }",
            "        ",
            "    }",
            "     this.el.set_sort_column_id(0, Gtk.SortType.ASCENDING);          ",
            "                                     ",
            "}",
            ""
           ]
          }
         ],
         "xtype" : "ComboBox"
        }
       ],
       "n_columns" : 2,
       "n_rows" : 3,
       "xtype" : "Grid"
      }
     ],
     "xtype" : "Box"
    },
    {
     "$ xns" : "Gtk",
     "* pack" : "add_action_widget,0",
     "label" : "Cancel",
     "xtype" : "Button"
    },
    {
     "$ xns" : "Gtk",
     "* pack" : "add_action_widget,1",
     "label" : "OK",
     "xtype" : "Button"
    }
   ],
   "listeners" : {
    "delete_event" : [
     "(self, event) => {",
     "    this.el.hide();",
     "    return true; ",
     "    //test  ",
     "} "
    ],
    "response" : [
     " (self, response_id) =>  { ",
     "  ",
     "\tif (response_id < 1) { // cancel!",
     "            this.el.hide();",
     "            return;",
     "        }",
     "",
     "",
     "",
     "        if (_this.name.el.get_text().length  < 1) {",
     "            Xcls_StandardErrorDialog.singleton().show(",
     "                this.el,",
     "                \"You have to set Component name \"",
     "            );",
     "             ",
     "            return;",
     "        }",
     "        // what does this do?",
     "        ",
     "        var isNew = _this.file.name.length  > 0 ? false : true;",
     "        /*",
     "        if (!isNew && this.file.name != _this.name.el.get_text()) {",
     "            Xcls_StandardErrorDialog.singleton().show(",
     "                this.el,",
     "                \"Sorry changing names does not work yet. \"",
     "            );",
     "             ",
     "            return;",
     "        }",
     "        */",
     "         ",
     "        ",
     "      ",
     "        // FIXME - this may be more complicated...",
     "        //for (var i in this.def) {",
     "        //    this.file[i] =  this.get(i).el.get_text();",
     "        //}",
     "",
     "        if (!isNew) {",
     "              ",
     "            this.updateFileFromEntry();",
     "                                                        ",
     "        ",
     "            _this.file.save();",
     "            this.el.hide();",
     "            return;",
     "        }",
     "        var fn = this.name.el.get_text();",
     "        var dir = _this.project.firstPath();",
     "       ",
     "        if (GLib.FileUtils.test(dir + \"/\" + fn + \".bjs\", GLib.FileTest.EXISTS)) {",
     "            Xcls_StandardErrorDialog.singleton().show(",
     "                this.el,",
     "                \"That file already exists\"",
     "            ); ",
     "            return;",
     "        }",
     "        try {",
     "\t\t    var f =  JsRender.JsRender.factory(",
     "\t\t            _this.file.project.xtype,  ",
     "\t\t            _this.file.project, ",
     "\t\t            dir + \"/\" + fn + \".bjs\");",
     "",
     "\t\t    _this.file = f;",
     "        ",
     "\t\t} catch (JsRender.Error e) {",
     "\t\t   Xcls_StandardErrorDialog.singleton().show(",
     "                    this.el,",
     "                    \"Error creating file? \"",
     "                );",
     "                return;",
     "\t\t\t  ",
     "\t\t}",
     "        ",
     "        this.updateFileFromEntry();",
     "        _this.file.save();",
     "        _this.file.project.addFile(_this.file);",
     "        ",
     "\t ",
     "        // what about .js ?",
     "       ",
     "        this.el.hide();",
     "        ",
     "        ",
     "        //var tmpl = this.project.loadFileOnly(DialogNewComponent.get('template').getValue());",
     "         ",
     "        //var nf = _this.project.create(dir + \"/\" + _this.file.name + \".bjs\");",
     "        //for (var i in this.file) {",
     "        //    nf[i] = this.file[i];",
     "        //}",
     "        _this.success(_this.project, _this.file);",
     "        /*",
     "",
     "        -- fixme -- needs to be a signal..",
     "        if (DialogNewComponent.success != null) {",
     "            DialogNewComponent.success(_this.project, nf);",
     "        }",
     "        */",
     "}"
    ],
    "show" : [
     "(self)  => {",
     "  this.el.show_all();",
     "  //test",
     "}"
    ]
   },
   "title" : "New Component",
   "xtype" : "Dialog",
   "| void show" : [
    "(JsRender.JsRender c) ",
    "{",
    "    this.project = c.project;",
    "    ",
    "    //if (!this.el) {",
    "        //this.init();",
    "     //}",
    "    ",
    "    _this.name.el.set_text(c.name);",
    "    _this.title.el.set_text(c.title);",
    "    _this.parent.el.set_text(c.parent);    ",
    "    _this.region.el.set_text(c.region);",
    "    _this.modOrder.el.set_text(c.modOrder);",
    "     _this.permname.el.set_text(c.permname);",
    "    ",
    "    if (c.path.length > 0) {",
    "        this.el.set_title(\"Edit File Details - \" + c.name);",
    "    } else {",
    "        this.el.set_title(\"Create New File\");",
    "    }",
    "    ",
    "     var ar = new Gee.ArrayList<string>();",
    "     _this.dbmodel.loadData(ar,\"\");",
    "    // load the modules... if relivant..",
    "    if (this.project.xtype == \"Gtk\") {",
    "        var p = (Project.Gtk)c.project;",
    "          var cg = p.compilegroups;",
    "",
    "        var iter = cg.map_iterator();",
    "       while(iter.next()) {",
    "            var key = iter.get_key();",
    "            if (key == \"_default_\") {",
    "                continue;",
    "            }",
    "            ar.add(key);",
    "        };",
    "        _this.dbmodel.loadData(ar, c.build_module);",
    "",
    "    } ",
    "     ",
    "    _this.file = c;",
    "    //console.log('show all');",
    "    this.el.show_all();",
    "    ",
    "    //this.success = c.success;",
    "    ",
    "    ",
    "}"
   ],
   "| void updateFileFromEntry" : [
    "() {",
    "",
    "        _this.file.title = _this.title.el.get_text();",
    "        _this.file.region = _this.region.el.get_text();            ",
    "        _this.file.parent = _this.parent.el.get_text();                        ",
    "        _this.file.permname = _this.permname.el.get_text();                                    ",
    "        _this.file.modOrder = _this.modOrder.el.get_text();",
    "        ",
    "        if (_this.file.name.length  > 0 && _this.file.name != _this.name.el.get_text()) {",
    "            try {",
    "            \t_this.file.renameTo(_this.name.el.get_text());",
    "        \t} catch (JsRender.Error e) {",
    "        \t\treturn;",
    "        \t}",
    "        }",
    "        // store the module...",
    "        _this.file.build_module = \"\";        ",
    "         Gtk.TreeIter iter; ",
    "        if (_this.build_module.el.get_active_iter (out iter)) {",
    "             Value vfname;",
    "             this.dbmodel.el.get_value (iter, 0, out vfname);",
    "             if (((string)vfname).length > 0) {",
    "                 _this.file.build_module = (string)vfname;",
    "             }",
    "    ",
    "        }",
    "        ",
    "        ",
    "",
    "                                                    ",
    "}    "
   ]
  }
 ],
 "modOrder" : "",
 "name" : "DialogNewComponent",
 "parent" : "",
 "path" : "/home/alan/gitlive/roobuilder/src/Builder4/DialogNewComponent.bjs",
 "permname" : "",
 "title" : ""
}